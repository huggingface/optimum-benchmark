name: CLI ROCm Pytorch Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - labeled
      - unlabeled

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

jobs:
  run_cli_rocm_pytorch_single_gpu_tests:
    if: ${{
      (github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch') ||
      contains( github.event.pull_request.labels.*.name, 'cli') ||
      contains( github.event.pull_request.labels.*.name, 'rocm') ||
      contains( github.event.pull_request.labels.*.name, 'pytorch') ||
      contains( github.event.pull_request.labels.*.name, 'single_gpu') ||
      contains( github.event.pull_request.labels.*.name, 'cli_rocm_pytorch_single_gpu')
      }}

    uses: huggingface/hf-workflows/.github/workflows/optimum_benchmark_instinct_ci.yaml@testing
    with:
      test_file: test_cli.py
      machine_type: single-gpu
      install_extras: testing,diffusers,timm,peft,gptqmodel
      pytest_keywords: cli and cuda and pytorch and not (dp or tp or ddp or device_map or deepspeed) and not (bnb or awq or gptq)

  run_cli_rocm_pytorch_multi_gpu_tests:
    if: ${{
      (github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch') ||
      contains( github.event.pull_request.labels.*.name, 'cli') ||
      contains( github.event.pull_request.labels.*.name, 'rocm') ||
      contains( github.event.pull_request.labels.*.name, 'pytorch') ||
      contains( github.event.pull_request.labels.*.name, 'multi_gpu') ||
      contains( github.event.pull_request.labels.*.name, 'cli_rocm_pytorch_multi_gpu')
      }}

    uses: huggingface/hf-workflows/.github/workflows/optimum_benchmark_instinct_ci.yaml@testing
    with:
      test_file: test_cli.py
      machine_type: multi-gpu
      install_extras: testing,diffusers,timm,peft
      pytest_keywords: cli and cuda and pytorch and (dp or tp or ddp or device_map)
